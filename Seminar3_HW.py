# ----------------задача-------------------------------------------
# Задача 16: Требуется вычислить, сколько раз встречается некоторое
# число X в массиве A[1..N]. Пользователь в первой строке вводит
# натуральное число N – количество элементов в массиве. В последующих
# строках записаны N целых чисел Ai. Последняя строка содержит число X

# 5
# 1 2 3 4 5
# 3
# -> 1
# ----------------решение-------------------------------------------

# import os
# os.system('clear')
# import random

# n = int(input("Введите длину массива случайных чисел: "))
# x = int(input("Введите число для поиска: "))

# count = 0
# array = []
# for num in range(n):
#     array.append(random.randint(0, 10))

# for i in array:
#     if i == x:
#         count +=1

# print(f"получившийся массив: {array}")
# print(f"поличество повторений заданного числа: {x} в массиве: {count} раз")

# --------------конец решени-------------------------------------------

# ----------------задача-------------------------------------------
# Задача 18: Требуется найти в массиве A[1..N] самый близкий по
# величине элемент к заданному числу X. Пользователь в первой строке
# вводит натуральное число N – количество элементов в массиве. В
# последующих строках записаны N целых чисел Ai. Последняя строка
# содержит число X

# 5
# 1 2 3 4 5
# 6
# -> 5

# ----------------решение-------------------------------------------

# import os
# os.system('cls')
# import random

# def get_array(num): # генерируем массив случайных чисел по заданному диапазону
#     array = []
#     for number in range(num):
#         array.append(random.randint(0, 100)) # генерируем в диапазоне  от 0 до 100
#     return array

# def get_min_num(array, num):
#     temp_min_delta = array[0] - num
#     if temp_min_delta < 0:
#         temp_min_delta *= -1

#     number_approximate = array[0]
#     if num in array:
#         print(f'Самый близкий по величине элемент к заданному числу {num} равен {num}')
#     else:
#         for i in array:
#             if i < num:
#                 temp = num - i
#                 if temp_min_delta > temp:
#                     temp_min_delta = temp
#                     number_approximate = i
#             else:
#                 temp = i - num
#                 if temp_min_delta > temp:
#                     temp_min_delta = temp
#                     number_approximate = i

#         print(f'Самый близкий по величине элемент к заданному числу {num} '
#               f'равен {number_approximate}')


# n = int(input("Введите длину массива случайных чисел: "))
# x = int(input("Введите число, приближённое к которому надо найти: "))

# random_array = get_array(n) # получили массив для сравнения
# print(random_array)
# get_min_num(random_array, x)


# --------------конец решени-------------------------------------------

# ----------------задача-------------------------------------------

# Задача 20: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную
# ценность. В случае с английским алфавитом очки распределяются так:
# ● A, E, I, O, U, L, N, S, T, R – 1 очко;
# ● D, G – 2 очка;
# ● B, C, M, P – 3 очка;
# ● F, H, V, W, Y – 4 очка;
# ● K – 5 очков;
# ● J, X – 8 очков;
# ● Q, Z – 10 очков.
# А русские буквы оцениваются так:
# ● А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# ● Д, К, Л, М, П, У – 2 очка;
# ● Б, Г, Ё, Ь, Я – 3 очка;
# ● Й, Ы – 4 очка;
# ● Ж, З, Х, Ц, Ч – 5 очков;
# ● Ш, Э, Ю – 8 очков;
# ● Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, которое содержит либо только
# английские, либо только русские буквы.

# ----------------решение-------------------------------------------

# word = (input('Введите слово: ')).upper()

# dictionary_abc = {1: 'AEIOULNSTRАВЕИНОРСТ',
#         2:'DGДКЛМПУ',
#         3:'BCMPБГЁЬЯ',
#         4:'FHVWYЙЫ',
#         5:'KЖЗХЦЧ',
#         8:'JXШЭЮ',
#         10:'QZФЩЪ'
#         }

# sum = 0
# for simbol in word: # проходимся по каждому символу введённого слова
#         for key, value in dictionary_abc.items(): # проходимся по словарю
#                 for i in range(len(value)): # сравниваем каждыйсимвол значения в словаре с каждым симоволом введённого слова
#                         if simbol == value[i]:
#                                 sum += key
# print(f'Ценность слова {word} составляет {sum} очков')

# --------------конец решени-------------------------------------------

